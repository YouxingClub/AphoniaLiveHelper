// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by `package:ffigen`.
// ignore_for_file: type=lint
import 'dart:ffi' as ffi;

class NativeLibrary {
  /// Holds the symbol lookup function.
  final ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
      _lookup;

  /// The symbols are looked up in [dynamicLibrary].
  NativeLibrary(ffi.DynamicLibrary dynamicLibrary)
      : _lookup = dynamicLibrary.lookup;

  /// The symbols are looked up with [lookup].
  NativeLibrary.fromLookup(
      ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
          lookup)
      : _lookup = lookup;

  ffi.Pointer<ffi.Char> generateMsgsC(
    ffi.Pointer<ffi.Char> origin,
  ) {
    return _generateMsgsC(
      origin,
    );
  }

  late final _generateMsgsCPtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<ffi.Char> Function(
              ffi.Pointer<ffi.Char>)>>('generateMsgsC');
  late final _generateMsgsC = _generateMsgsCPtr
      .asFunction<ffi.Pointer<ffi.Char> Function(ffi.Pointer<ffi.Char>)>();

  void freeMsg(
    ffi.Pointer<ffi.Char> msg,
  ) {
    return _freeMsg(
      msg,
    );
  }

  late final _freeMsgPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Char>)>>(
          'freeMsg');
  late final _freeMsg =
      _freeMsgPtr.asFunction<void Function(ffi.Pointer<ffi.Char>)>();
}
